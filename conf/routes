# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
#GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

#Login
POST /login controllers.AuthController.authenticate

#POZO
#Agregar un pozo
POST    /pozo                       controllers.PozoController.createPozo
#Modifica el estado del pozo
PUT     /updatePozo/:id/:estado     controllers.PozoController.updatePozo(id: Long, estado: String)
#Mostrar pozos
GET     /pozo                       controllers.PozoController.getPozos
#Borrar un pozo dado su ID
DELETE  /pozo/:id                   controllers.PozoController.deletePozo(id: Long)
#


#USUARIO
#Listar todos los Usuarios
GET     /users                      controllers.UserController.getUsers

POST    /users/register             controllers.UserController.createUser



#CAMPO
#Agregar un campo
POST    /campo                      controllers.CampoController.createCampo
#Mostrar campos
GET     /campo                      controllers.CampoController.getCampos
#Mostrar campo por ID
GET     /campo/:id                  controllers.CampoController.getCampo(id: Long)
#Trae todos los pozos de una region
GET     /pozosDeCampos/:reg         controllers.CampoController.getPozosAllCamposRegion(reg: String)
#Muestra todos los campos dada una regi√≥n
GET     /campo/:reg                 controllers.CampoController.getCampoReg(reg: String)
#Borra un campo su ID
DELETE /campo/:id                   controllers.CampoController.deleteCampo(id: Long)
#
GET /campo/:idJefe                  controllers.CampoController.getCampoJefe(idJefe:Long)

#REGISTRO SENSOR DE TEMPERATURA
#Agregar un registro de temperatura
POST    /registro/temp              controllers.RegistroSensorController.createRegistroSensorTemp


#REGISTRO SENSOR DE BARRILES
#Agregar un registro de barril
POST    /registro/barril            controllers.RegistroSensorController.createRegistroSensorBarriles

#REGISTRO SENSOR DE ENERGIA
#Agregar un registro de energia
POST    /registro/energia           controllers.RegistroSensorController.createRegistroSensorEner

#REGISTRO SENSOR DE EMERGENCIA
#Emite un registro de emergencia
POST    /emergencia                 controllers.AlertController.reportAlert
#Marca una emergencia como resuelta y la elimina de la lista de notificaciones
DELETE  /notification/:id           controllers.AlertController.removeNotification(id: Long)

#REPORTES
#Genera un reporte de TEMPERATURA con filtros temporales
POST    /reporte/temp               controllers.ReportController.generateReportTemp
#Genera un reporte de ENERGIA con filtros temporales
POST    /reporte/ener               controllers.ReportController.generateReportEner
#Genera un reporte de EMERGENCIAS con filtros temporales
POST    /reporte/emerg              controllers.ReportController.generateReportEmerg
#Genera un reporte de BARRILES con filtros temporales
POST    /reporte/bar                controllers.ReportController.generateReportBarriles

OPTIONS /:path                         controllers.OptionController.attend(path: String)

GET /js/*file                       controllers.Assets.at(path="/public/js",file)
GET /                               controllers.Assets.at(path="/public",file="login.html")
GET /index                          controllers.Assets.at(path="/public",file="index.html")
GET /pozos                          controllers.Assets.at(path="/public",file="pozos.html")
GET /campos                         controllers.Assets.at(path="/public",file="campos.html")
GET /graphs                       controllers.Assets.at(path="/public",file="graphs.html")
GET /emergencias                    controllers.Assets.at(path="/public",file="emergency.html")
GET /css/*file                      controllers.Assets.at(path="/public/css",file)
GET /fonts/*file                    controllers.Assets.at(path="/public/fonts",file)
GET /img/*file                      controllers.Assets.at(path="/public/img",file)
GET /font-awesome/*file             controllers.Assets.at(path="/public/font-awesome",file)
GET /locales/*file                  controllers.Assets.at(path="/public/locales",file)


GET     /registro/temp/:id           controllers.RegistroSensorController.getLastRegistroSensorTemp(id: Long)
GET     /registro/barr/:id             controllers.RegistroSensorController.getLastRegistroSensorBarr(id: Long)
GET     /registro/ener/:id             controllers.RegistroSensorController.getLastRegistroSensorEner(id: Long)